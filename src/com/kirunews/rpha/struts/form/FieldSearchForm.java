/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.kirunews.rpha.struts.form;

import java.io.UnsupportedEncodingException;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.TreeMap;

import javax.servlet.http.HttpServletRequest;
import org.apache.struts.action.ActionErrors;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionMapping;

/** 
 * MyEclipse Struts
 * Creation date: 09-14-2009
 * 
 * XDoclet definition:
 * @struts.form name="fieldSearchForm"
 */
public class FieldSearchForm extends ActionForm {
	/**
	 * 
	 */
	private static final long serialVersionUID = -9141771922596563630L;

	private String message;
	
	private Map<String, String> operatorValues = new TreeMap<String, String>();
	private List<String[]> fieldNames = new ArrayList<String[]>();

	/** values property */
	private String[] values;

	/** operators property */
	private String[] operators;

	private String resultList;
	private String formState;
	private String links;
	private int offset = 1;

	/** fields property */
	private String[] fields;
	
	{
		operatorValues.put("AND", "ÉS");
		operatorValues.put("OR", "VAGY");
		operatorValues.put("NOT", "DE NEM");
		
		fieldNames.add(new String[]{"v1", "rpha"});
		fieldNames.add(new String[]{"v2", "kezdősor"});
		fieldNames.add(new String[]{"v3", "cím"});
		fieldNames.add(new String[]{"v5_s1", "szerző: vezetéknév"});
		fieldNames.add(new String[]{"v5_s2", "szerző: keresztnév"});
		// fieldNames.add(new String[]{"v5_3", "szerző: keresztnév"}); // bizonytalan szerzőség
		fieldNames.add(new String[]{"v11", "minta"});
		fieldNames.add(new String[]{"v12", "minta kezdősora"});
		fieldNames.add(new String[]{"v13", "minta címe"});
		fieldNames.add(new String[]{"v14", "himnusz utalószáma"});
		fieldNames.add(new String[]{"v15_s1", "minta szerzője: vezetéknév"});
		fieldNames.add(new String[]{"v15_s2", "minta szerzője: keresztnév"});
		//fieldNames.add(new String[]{"v15", "minta szerzője"});
		fieldNames.add(new String[]{"v18", "eredeti nyelv"});
		fieldNames.add(new String[]{"v21", "szereztetés ideje"});
		fieldNames.add(new String[]{"v22", "szereztetés idejének pontosítása"});
		fieldNames.add(new String[]{"v23", "ének/szöveg?"});
		fieldNames.add(new String[]{"v24", "szignáltság"});
		fieldNames.add(new String[]{"v28", "műfaj"});
		fieldNames.add(new String[]{"v30", "kolofon?"});
		fieldNames.add(new String[]{"v31", "ajánlás"});
		fieldNames.add(new String[]{"v32_s1", "kolofón: szerző"});
		fieldNames.add(new String[]{"v32_sd", "kolofón: idő"});
		fieldNames.add(new String[]{"v32_sl", "kolofón: hely"});
		fieldNames.add(new String[]{"v33", "van-e akrosztichon?"});
		fieldNames.add(new String[]{"v34", "akrosztichon"});
		fieldNames.add(new String[]{"v35_s1", "akrosztichon: személy"});
		fieldNames.add(new String[]{"v35_sd", "akrosztichon: időpont"});
		fieldNames.add(new String[]{"v35_sl", "akrosztichon: hely"});
		fieldNames.add(new String[]{"v39", "megjegyzés"});
		fieldNames.add(new String[]{"v41", "teljesség"});
		fieldNames.add(new String[]{"v42", "terjedelem"});
		fieldNames.add(new String[]{"v43", "terjedelem mértékegysége"});
		fieldNames.add(new String[]{"v44", "metrum típus"});
		fieldNames.add(new String[]{"v45", "metrum"});
		fieldNames.add(new String[]{"v46", "rímképlet"});
		fieldNames.add(new String[]{"v47", "szótagszám"});
		fieldNames.add(new String[]{"v48_sk", "felekezet: katolikus"});
		fieldNames.add(new String[]{"v48_sp", "felekezet: protestáns"});
		fieldNames.add(new String[]{"v48_sr", "felekezet: református"});
		fieldNames.add(new String[]{"v48_se", "felekezet: evangélikus"});
		fieldNames.add(new String[]{"v48_ss", "felekezet: szombatos"});
		fieldNames.add(new String[]{"v48_sm", "felekezet: muzulmán"});
		fieldNames.add(new String[]{"v48_sv", "felekezet: világi"});
		fieldNames.add(new String[]{"v48_sx", "felekezet: meg nem határozott"});
		fieldNames.add(new String[]{"v51", "RMNy"});
		fieldNames.add(new String[]{"v52", "kéziratos forrás"});
		fieldNames.add(new String[]{"v53", "dallamkiadás"});
		fieldNames.add(new String[]{"v54", "modern kiadás"});
		fieldNames.add(new String[]{"v55", "fakszimile"});
		fieldNames.add(new String[]{"v61", "nótajelzés"});
		fieldNames.add(new String[]{"v65", "nótajelzésként használja"});
		// fieldNames.add(new String[]{"v91", "rectyp"});
		fieldNames.add(new String[]{"v161", "rész-egész hivatkozás"});
		fieldNames.add(new String[]{"v162", "hivatkozás"});
		fieldNames.add(new String[]{"v163", "refrénszerkezet"});
		fieldNames.add(new String[]{"v164", "echós-e?"});
		fieldNames.add(new String[]{"v165", "belső hivatkozás"});
		fieldNames.add(new String[]{"v166", "élőfej"});
		/*
		fieldNames.add(new String[]{"v101", "dokumentum típus"});
		fieldNames.add(new String[]{"v111", "dokumentum sorszám"});
		fieldNames.add(new String[]{"v112", "szerző"});
		fieldNames.add(new String[]{"v113", "fordito"});
		fieldNames.add(new String[]{"v121", "uj-cim"});
		fieldNames.add(new String[]{"v122", "cim-er"});
		fieldNames.add(new String[]{"v131", "nyomdahely"});
		fieldNames.add(new String[]{"v132", "idopont"});
		fieldNames.add(new String[]{"v133", "nyomdasz"});
		fieldNames.add(new String[]{"v141", "mufaj"});
		fieldNames.add(new String[]{"v142", "felekezet"});
		fieldNames.add(new String[]{"v151", "varos"});
		fieldNames.add(new String[]{"v152", "konyvtar"});
		fieldNames.add(new String[]{"v153", "gyujtemeny"});
		fieldNames.add(new String[]{"v154", "kotet-jelzet"});
		fieldNames.add(new String[]{"v155", "szoveges-feloldasa"});
		fieldNames.add(new String[]{"v156", "raktari-jelzet"});
		fieldNames.add(new String[]{"v160", "megjegyzes"});
		*/

	}


	/*
	 * Generated Methods
	 */

	/** 
	 * Method validate
	 * @param mapping
	 * @param request
	 * @return ActionErrors
	 */
	public ActionErrors validate(ActionMapping mapping,
			HttpServletRequest request) {
		// TODO Auto-generated method stub
		return null;
	}

	/** 
	 * Method reset
	 * @param mapping
	 * @param request
	 */
	public void reset(ActionMapping mapping, HttpServletRequest request) {
		try {
			request.setCharacterEncoding("utf-8");
		} catch(UnsupportedEncodingException e) {
			;
		}
	}

	/** 
	 * Returns the values.
	 * @return String[]
	 */
	public String[] getValues() {
		return values;
	}

	/** 
	 * Set the values.
	 * @param values The values to set
	 */
	public void setValues(String[] values) {
		this.values = values;
	}

	/** 
	 * Returns the operators.
	 * @return String[]
	 */
	public String[] getOperators() {
		return operators;
	}

	/** 
	 * Set the operators.
	 * @param operators The operators to set
	 */
	public void setOperators(String[] operators) {
		this.operators = operators;
	}

	/** 
	 * Returns the fields.
	 * @return String[]
	 */
	public String[] getFields() {
		return fields;
	}

	/** 
	 * Set the fields.
	 * @param fields The fields to set
	 */
	public void setFields(String[] fields) {
		this.fields = fields;
	}

	/**
	 * @param message the message to set
	 */
	public void setMessage(String message) {
		this.message = message;
	}

	/**
	 * @return the message
	 */
	public String getMessage() {
		return message;
	}

	/**
	 * @param operatorValues the operatorValues to set
	 */
	public void setOperatorValues(Map<String, String> operatorValues) {
		this.operatorValues = operatorValues;
	}

	/**
	 * @return the operatorValues
	 */
	public Map<String, String> getOperatorValues() {
		return operatorValues;
	}

	/**
	 * @param fieldNames the fieldNames to set
	 */
	public void setFieldNames(ArrayList<String[]> fieldNames) {
		this.fieldNames = fieldNames;
	}

	/**
	 * @return the fieldNames
	 */
	public List<String[]> getFieldNames() {
		return fieldNames;
	}

	/**
	 * @param resultList the resultList to set
	 */
	public void setResultList(String resultList) {
		this.resultList = resultList;
	}

	/**
	 * @return the resultList
	 */
	public String getResultList() {
		return resultList;
	}

	/**
	 * @param formState the formState to set
	 */
	public void setFormState(String formState) {
		this.formState = formState;
	}

	/**
	 * @return the formState
	 */
	public String getFormState() {
		return formState;
	}

	public String getLinks() {
		return links;
	}

	public void setLinks(String links) {
		this.links = links;
	}

	/**
	 * @param offset the offset to set
	 */
	public void setOffset(int offset) {
		this.offset = offset;
	}

	/**
	 * @return the offset
	 */
	public int getOffset() {
		return offset;
	}

}